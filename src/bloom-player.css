.pageSlider {
    counter-reset: pageNumber;
    background-color:thistle;
}

.bloomPlayer.bloomPlayer1 .pageSlider .contextPage .bloom-page {
    margin-left: 10%;
    width: 80%;
    margin-top: 10%;
    padding-top: calc(80% * 16 / 9); /* of width! */
    opacity: 0.6;
    background-color: darkgray;
}

.bloomPlayer.bloomPlayer1 .pageSlider .bloom-page {
    margin-left: 2%;
    width: 96%;
    margin-top: 2%;
    padding-top: calc(96% * 16 / 9); /* of width! */
    max-width: initial;
    min-width: initial;
    max-height: initial;
    min-height: initial;
}

/* Here we need a specificity of better than 0,0,4,0 to beat the rules
that usually set the size and position of marginBox.*/
.bloomPlayer.bloomPlayer1 .pageSlider .bloom-page .marginBox {
    width: 90%;
    height: 90%;
    position: absolute; /* inside massive padding that sets height of page */
    top: 5%;
    left: 5%;
}

/* the default positioning of these dots is inside the page area, but our pages overlap them.
Also, if there are more than will fit on a line, some drop outside the control altogether.
We just make them follow the main content normally. */
.bloomPlayer .slick-dots {
    position: relative;
    bottom: initial;
}

/* override the rule in bloom-preview that puts a border at the bottom of each page
to separate the pages in a continuous scrolling view. Unfortunately that rule is
!important so the only way to beat it is to be !important too. */
.bloomPlayer.bloomPlayer1 DIV.bloom-page {
    border-bottom: initial !important;
}